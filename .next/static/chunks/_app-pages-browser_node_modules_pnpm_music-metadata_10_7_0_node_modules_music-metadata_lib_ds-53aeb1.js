"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_music-metadata_10_7_0_node_modules_music-metadata_lib_ds-53aeb1"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/dsf/DsfChunk.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/dsf/DsfChunk.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelType: () => (/* binding */ ChannelType),\n/* harmony export */   ChunkHeader: () => (/* binding */ ChunkHeader),\n/* harmony export */   DsdChunk: () => (/* binding */ DsdChunk),\n/* harmony export */   FormatChunk: () => (/* binding */ FormatChunk)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(app-pages-browser)/./node_modules/.pnpm/token-types@6.0.0/node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/common/FourCC.js\");\n\n\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nconst ChunkHeader = {\n    len: 12,\n    get: (buf, off) => {\n        return { id: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off), size: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT64_LE.get(buf, off + 4) };\n    }\n};\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nconst DsdChunk = {\n    len: 16,\n    get: (buf, off) => {\n        return {\n            fileSize: token_types__WEBPACK_IMPORTED_MODULE_0__.INT64_LE.get(buf, off),\n            metadataPointer: token_types__WEBPACK_IMPORTED_MODULE_0__.INT64_LE.get(buf, off + 8)\n        };\n    }\n};\nvar ChannelType;\n(function (ChannelType) {\n    ChannelType[ChannelType[\"mono\"] = 1] = \"mono\";\n    ChannelType[ChannelType[\"stereo\"] = 2] = \"stereo\";\n    ChannelType[ChannelType[\"channels\"] = 3] = \"channels\";\n    ChannelType[ChannelType[\"quad\"] = 4] = \"quad\";\n    ChannelType[ChannelType[\"4 channels\"] = 5] = \"4 channels\";\n    ChannelType[ChannelType[\"5 channels\"] = 6] = \"5 channels\";\n    ChannelType[ChannelType[\"5.1 channels\"] = 7] = \"5.1 channels\";\n})(ChannelType || (ChannelType = {}));\n/**\n * Common chunk DSD header: the 'chunk name (Four-CC)' & chunk size\n */\nconst FormatChunk = {\n    len: 40,\n    get: (buf, off) => {\n        return {\n            formatVersion: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off),\n            formatID: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 4),\n            channelType: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 8),\n            channelNum: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 12),\n            samplingFrequency: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 16),\n            bitsPerSample: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 20),\n            sampleCount: token_types__WEBPACK_IMPORTED_MODULE_0__.INT64_LE.get(buf, off + 24),\n            blockSizePerChannel: token_types__WEBPACK_IMPORTED_MODULE_0__.INT32_LE.get(buf, off + 32)\n        };\n    }\n};\n//# sourceMappingURL=DsfChunk.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tdXNpYy1tZXRhZGF0YUAxMC43LjAvbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9kc2YvRHNmQ2h1bmsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFDO0FBQ2E7QUFDbEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsaUJBQWlCLElBQUksMERBQVcsc0JBQXNCLGtEQUFlO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpREFBYztBQUNwQyw2QkFBNkIsaURBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQ0FBa0M7QUFDbkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaURBQWM7QUFDekMsc0JBQXNCLGlEQUFjO0FBQ3BDLHlCQUF5QixpREFBYztBQUN2Qyx3QkFBd0IsaURBQWM7QUFDdEMsK0JBQStCLGlEQUFjO0FBQzdDLDJCQUEyQixpREFBYztBQUN6Qyx5QkFBeUIsaURBQWM7QUFDdkMsaUNBQWlDLGlEQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9saWxhcy9CdXJlYXUvRGV2L0xNUC9ub2RlX21vZHVsZXMvLnBucG0vbXVzaWMtbWV0YWRhdGFAMTAuNy4wL25vZGVfbW9kdWxlcy9tdXNpYy1tZXRhZGF0YS9saWIvZHNmL0RzZkNodW5rLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRva2VuIGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCB7IEZvdXJDY1Rva2VuIH0gZnJvbSAnLi4vY29tbW9uL0ZvdXJDQy5qcyc7XG4vKipcbiAqIENvbW1vbiBjaHVuayBEU0QgaGVhZGVyOiB0aGUgJ2NodW5rIG5hbWUgKEZvdXItQ0MpJyAmIGNodW5rIHNpemVcbiAqL1xuZXhwb3J0IGNvbnN0IENodW5rSGVhZGVyID0ge1xuICAgIGxlbjogMTIsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHsgaWQ6IEZvdXJDY1Rva2VuLmdldChidWYsIG9mZiksIHNpemU6IFRva2VuLlVJTlQ2NF9MRS5nZXQoYnVmLCBvZmYgKyA0KSB9O1xuICAgIH1cbn07XG4vKipcbiAqIENvbW1vbiBjaHVuayBEU0QgaGVhZGVyOiB0aGUgJ2NodW5rIG5hbWUgKEZvdXItQ0MpJyAmIGNodW5rIHNpemVcbiAqL1xuZXhwb3J0IGNvbnN0IERzZENodW5rID0ge1xuICAgIGxlbjogMTYsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGZpbGVTaXplOiBUb2tlbi5JTlQ2NF9MRS5nZXQoYnVmLCBvZmYpLFxuICAgICAgICAgICAgbWV0YWRhdGFQb2ludGVyOiBUb2tlbi5JTlQ2NF9MRS5nZXQoYnVmLCBvZmYgKyA4KVxuICAgICAgICB9O1xuICAgIH1cbn07XG5leHBvcnQgdmFyIENoYW5uZWxUeXBlO1xuKGZ1bmN0aW9uIChDaGFubmVsVHlwZSkge1xuICAgIENoYW5uZWxUeXBlW0NoYW5uZWxUeXBlW1wibW9ub1wiXSA9IDFdID0gXCJtb25vXCI7XG4gICAgQ2hhbm5lbFR5cGVbQ2hhbm5lbFR5cGVbXCJzdGVyZW9cIl0gPSAyXSA9IFwic3RlcmVvXCI7XG4gICAgQ2hhbm5lbFR5cGVbQ2hhbm5lbFR5cGVbXCJjaGFubmVsc1wiXSA9IDNdID0gXCJjaGFubmVsc1wiO1xuICAgIENoYW5uZWxUeXBlW0NoYW5uZWxUeXBlW1wicXVhZFwiXSA9IDRdID0gXCJxdWFkXCI7XG4gICAgQ2hhbm5lbFR5cGVbQ2hhbm5lbFR5cGVbXCI0IGNoYW5uZWxzXCJdID0gNV0gPSBcIjQgY2hhbm5lbHNcIjtcbiAgICBDaGFubmVsVHlwZVtDaGFubmVsVHlwZVtcIjUgY2hhbm5lbHNcIl0gPSA2XSA9IFwiNSBjaGFubmVsc1wiO1xuICAgIENoYW5uZWxUeXBlW0NoYW5uZWxUeXBlW1wiNS4xIGNoYW5uZWxzXCJdID0gN10gPSBcIjUuMSBjaGFubmVsc1wiO1xufSkoQ2hhbm5lbFR5cGUgfHwgKENoYW5uZWxUeXBlID0ge30pKTtcbi8qKlxuICogQ29tbW9uIGNodW5rIERTRCBoZWFkZXI6IHRoZSAnY2h1bmsgbmFtZSAoRm91ci1DQyknICYgY2h1bmsgc2l6ZVxuICovXG5leHBvcnQgY29uc3QgRm9ybWF0Q2h1bmsgPSB7XG4gICAgbGVuOiA0MCxcbiAgICBnZXQ6IChidWYsIG9mZikgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZm9ybWF0VmVyc2lvbjogVG9rZW4uSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmKSxcbiAgICAgICAgICAgIGZvcm1hdElEOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA0KSxcbiAgICAgICAgICAgIGNoYW5uZWxUeXBlOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA4KSxcbiAgICAgICAgICAgIGNoYW5uZWxOdW06IFRva2VuLklOVDMyX0xFLmdldChidWYsIG9mZiArIDEyKSxcbiAgICAgICAgICAgIHNhbXBsaW5nRnJlcXVlbmN5OiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAxNiksXG4gICAgICAgICAgICBiaXRzUGVyU2FtcGxlOiBUb2tlbi5JTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAyMCksXG4gICAgICAgICAgICBzYW1wbGVDb3VudDogVG9rZW4uSU5UNjRfTEUuZ2V0KGJ1Ziwgb2ZmICsgMjQpLFxuICAgICAgICAgICAgYmxvY2tTaXplUGVyQ2hhbm5lbDogVG9rZW4uSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgMzIpXG4gICAgICAgIH07XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURzZkNodW5rLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/dsf/DsfChunk.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/dsf/DsfParser.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/dsf/DsfParser.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DsdContentParseError: () => (/* binding */ DsdContentParseError),\n/* harmony export */   DsfParser: () => (/* binding */ DsfParser)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(app-pages-browser)/./node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/browser.js\");\n/* harmony import */ var _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../id3v2/AbstractID3Parser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js\");\n/* harmony import */ var _DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DsfChunk.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/dsf/DsfChunk.js\");\n/* harmony import */ var _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../id3v2/ID3v2Parser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ParseError.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:parser:DSF');\nclass DsdContentParseError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_4__.makeUnexpectedFileContentError)('DSD') {\n}\n/**\n * DSF (dsd stream file) File Parser\n * Ref: https://dsd-guide.com/sites/default/files/white-papers/DSFFileFormatSpec_E.pdf\n */\nclass DsfParser extends _id3v2_AbstractID3Parser_js__WEBPACK_IMPORTED_MODULE_1__.AbstractID3Parser {\n    async postId3v2Parse() {\n        const p0 = this.tokenizer.position; // mark start position, normally 0\n        const chunkHeader = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader);\n        if (chunkHeader.id !== 'DSD ')\n            throw new DsdContentParseError('Invalid chunk signature');\n        this.metadata.setFormat('container', 'DSF');\n        this.metadata.setFormat('lossless', true);\n        const dsdChunk = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.DsdChunk);\n        if (dsdChunk.metadataPointer === BigInt(0)) {\n            debug(\"No ID3v2 tag present\");\n        }\n        else {\n            debug(`expect ID3v2 at offset=${dsdChunk.metadataPointer}`);\n            await this.parseChunks(dsdChunk.fileSize - chunkHeader.size);\n            // Jump to ID3 header\n            await this.tokenizer.ignore(Number(dsdChunk.metadataPointer) - this.tokenizer.position - p0);\n            return new _id3v2_ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__.ID3v2Parser().parse(this.metadata, this.tokenizer, this.options);\n        }\n    }\n    async parseChunks(bytesRemaining) {\n        while (bytesRemaining >= _DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader.len) {\n            const chunkHeader = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader);\n            debug(`Parsing chunk name=${chunkHeader.id} size=${chunkHeader.size}`);\n            switch (chunkHeader.id) {\n                case 'fmt ': {\n                    const formatChunk = await this.tokenizer.readToken(_DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.FormatChunk);\n                    this.metadata.setFormat('numberOfChannels', formatChunk.channelNum);\n                    this.metadata.setFormat('sampleRate', formatChunk.samplingFrequency);\n                    this.metadata.setFormat('bitsPerSample', formatChunk.bitsPerSample);\n                    this.metadata.setFormat('numberOfSamples', formatChunk.sampleCount);\n                    this.metadata.setFormat('duration', Number(formatChunk.sampleCount) / formatChunk.samplingFrequency);\n                    const bitrate = formatChunk.bitsPerSample * formatChunk.samplingFrequency * formatChunk.channelNum;\n                    this.metadata.setFormat('bitrate', bitrate);\n                    return; // We got what we want, stop further processing of chunks\n                }\n                default:\n                    this.tokenizer.ignore(Number(chunkHeader.size) - _DsfChunk_js__WEBPACK_IMPORTED_MODULE_2__.ChunkHeader.len);\n                    break;\n            }\n            bytesRemaining -= chunkHeader.size;\n        }\n    }\n}\n//# sourceMappingURL=DsfParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tdXNpYy1tZXRhZGF0YUAxMC43LjAvbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9kc2YvRHNmUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBOEI7QUFDb0M7QUFDQztBQUNiO0FBQ1k7QUFDbEUsY0FBYyxrQ0FBUztBQUNoQixtQ0FBbUMsOEVBQThCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3QkFBd0IsMEVBQWlCO0FBQ2hEO0FBQ0EsNENBQTRDO0FBQzVDLDJEQUEyRCxxREFBVztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxrREFBUTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyx5QkFBeUI7QUFDckU7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDhEQUFXO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxxREFBVztBQUM1QywrREFBK0QscURBQVc7QUFDMUUsd0NBQXdDLGdCQUFnQixPQUFPLGlCQUFpQjtBQUNoRjtBQUNBO0FBQ0EsdUVBQXVFLHFEQUFXO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxxRUFBcUUscURBQVc7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2xpbGFzL0J1cmVhdS9EZXYvTE1QL25vZGVfbW9kdWxlcy8ucG5wbS9tdXNpYy1tZXRhZGF0YUAxMC43LjAvbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9kc2YvRHNmUGFyc2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbml0RGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHsgQWJzdHJhY3RJRDNQYXJzZXIgfSBmcm9tICcuLi9pZDN2Mi9BYnN0cmFjdElEM1BhcnNlci5qcyc7XG5pbXBvcnQgeyBDaHVua0hlYWRlciwgRHNkQ2h1bmssIEZvcm1hdENodW5rIH0gZnJvbSAnLi9Ec2ZDaHVuay5qcyc7XG5pbXBvcnQgeyBJRDN2MlBhcnNlciB9IGZyb20gXCIuLi9pZDN2Mi9JRDN2MlBhcnNlci5qc1wiO1xuaW1wb3J0IHsgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yIH0gZnJvbSAnLi4vUGFyc2VFcnJvci5qcyc7XG5jb25zdCBkZWJ1ZyA9IGluaXREZWJ1ZygnbXVzaWMtbWV0YWRhdGE6cGFyc2VyOkRTRicpO1xuZXhwb3J0IGNsYXNzIERzZENvbnRlbnRQYXJzZUVycm9yIGV4dGVuZHMgbWFrZVVuZXhwZWN0ZWRGaWxlQ29udGVudEVycm9yKCdEU0QnKSB7XG59XG4vKipcbiAqIERTRiAoZHNkIHN0cmVhbSBmaWxlKSBGaWxlIFBhcnNlclxuICogUmVmOiBodHRwczovL2RzZC1ndWlkZS5jb20vc2l0ZXMvZGVmYXVsdC9maWxlcy93aGl0ZS1wYXBlcnMvRFNGRmlsZUZvcm1hdFNwZWNfRS5wZGZcbiAqL1xuZXhwb3J0IGNsYXNzIERzZlBhcnNlciBleHRlbmRzIEFic3RyYWN0SUQzUGFyc2VyIHtcbiAgICBhc3luYyBwb3N0SWQzdjJQYXJzZSgpIHtcbiAgICAgICAgY29uc3QgcDAgPSB0aGlzLnRva2VuaXplci5wb3NpdGlvbjsgLy8gbWFyayBzdGFydCBwb3NpdGlvbiwgbm9ybWFsbHkgMFxuICAgICAgICBjb25zdCBjaHVua0hlYWRlciA9IGF3YWl0IHRoaXMudG9rZW5pemVyLnJlYWRUb2tlbihDaHVua0hlYWRlcik7XG4gICAgICAgIGlmIChjaHVua0hlYWRlci5pZCAhPT0gJ0RTRCAnKVxuICAgICAgICAgICAgdGhyb3cgbmV3IERzZENvbnRlbnRQYXJzZUVycm9yKCdJbnZhbGlkIGNodW5rIHNpZ25hdHVyZScpO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnY29udGFpbmVyJywgJ0RTRicpO1xuICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnbG9zc2xlc3MnLCB0cnVlKTtcbiAgICAgICAgY29uc3QgZHNkQ2h1bmsgPSBhd2FpdCB0aGlzLnRva2VuaXplci5yZWFkVG9rZW4oRHNkQ2h1bmspO1xuICAgICAgICBpZiAoZHNkQ2h1bmsubWV0YWRhdGFQb2ludGVyID09PSBCaWdJbnQoMCkpIHtcbiAgICAgICAgICAgIGRlYnVnKFwiTm8gSUQzdjIgdGFnIHByZXNlbnRcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkZWJ1ZyhgZXhwZWN0IElEM3YyIGF0IG9mZnNldD0ke2RzZENodW5rLm1ldGFkYXRhUG9pbnRlcn1gKTtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGFyc2VDaHVua3MoZHNkQ2h1bmsuZmlsZVNpemUgLSBjaHVua0hlYWRlci5zaXplKTtcbiAgICAgICAgICAgIC8vIEp1bXAgdG8gSUQzIGhlYWRlclxuICAgICAgICAgICAgYXdhaXQgdGhpcy50b2tlbml6ZXIuaWdub3JlKE51bWJlcihkc2RDaHVuay5tZXRhZGF0YVBvaW50ZXIpIC0gdGhpcy50b2tlbml6ZXIucG9zaXRpb24gLSBwMCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IElEM3YyUGFyc2VyKCkucGFyc2UodGhpcy5tZXRhZGF0YSwgdGhpcy50b2tlbml6ZXIsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcGFyc2VDaHVua3MoYnl0ZXNSZW1haW5pbmcpIHtcbiAgICAgICAgd2hpbGUgKGJ5dGVzUmVtYWluaW5nID49IENodW5rSGVhZGVyLmxlbikge1xuICAgICAgICAgICAgY29uc3QgY2h1bmtIZWFkZXIgPSBhd2FpdCB0aGlzLnRva2VuaXplci5yZWFkVG9rZW4oQ2h1bmtIZWFkZXIpO1xuICAgICAgICAgICAgZGVidWcoYFBhcnNpbmcgY2h1bmsgbmFtZT0ke2NodW5rSGVhZGVyLmlkfSBzaXplPSR7Y2h1bmtIZWFkZXIuc2l6ZX1gKTtcbiAgICAgICAgICAgIHN3aXRjaCAoY2h1bmtIZWFkZXIuaWQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdmbXQgJzoge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmb3JtYXRDaHVuayA9IGF3YWl0IHRoaXMudG9rZW5pemVyLnJlYWRUb2tlbihGb3JtYXRDaHVuayk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdudW1iZXJPZkNoYW5uZWxzJywgZm9ybWF0Q2h1bmsuY2hhbm5lbE51bSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWV0YWRhdGEuc2V0Rm9ybWF0KCdzYW1wbGVSYXRlJywgZm9ybWF0Q2h1bmsuc2FtcGxpbmdGcmVxdWVuY3kpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnYml0c1BlclNhbXBsZScsIGZvcm1hdENodW5rLmJpdHNQZXJTYW1wbGUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnbnVtYmVyT2ZTYW1wbGVzJywgZm9ybWF0Q2h1bmsuc2FtcGxlQ291bnQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhLnNldEZvcm1hdCgnZHVyYXRpb24nLCBOdW1iZXIoZm9ybWF0Q2h1bmsuc2FtcGxlQ291bnQpIC8gZm9ybWF0Q2h1bmsuc2FtcGxpbmdGcmVxdWVuY3kpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBiaXRyYXRlID0gZm9ybWF0Q2h1bmsuYml0c1BlclNhbXBsZSAqIGZvcm1hdENodW5rLnNhbXBsaW5nRnJlcXVlbmN5ICogZm9ybWF0Q2h1bmsuY2hhbm5lbE51bTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhZGF0YS5zZXRGb3JtYXQoJ2JpdHJhdGUnLCBiaXRyYXRlKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOyAvLyBXZSBnb3Qgd2hhdCB3ZSB3YW50LCBzdG9wIGZ1cnRoZXIgcHJvY2Vzc2luZyBvZiBjaHVua3NcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50b2tlbml6ZXIuaWdub3JlKE51bWJlcihjaHVua0hlYWRlci5zaXplKSAtIENodW5rSGVhZGVyLmxlbik7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnl0ZXNSZW1haW5pbmcgLT0gY2h1bmtIZWFkZXIuc2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURzZlBhcnNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/dsf/DsfParser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractID3Parser: () => (/* binding */ AbstractID3Parser)\n/* harmony export */ });\n/* harmony import */ var strtok3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! strtok3 */ \"(app-pages-browser)/./node_modules/.pnpm/strtok3@10.0.1/node_modules/strtok3/lib/core.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"(app-pages-browser)/./node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/browser.js\");\n/* harmony import */ var _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ID3v2Token.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n/* harmony import */ var _ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ID3v2Parser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\");\n/* harmony import */ var _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../id3v1/ID3v1Parser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v1/ID3v1Parser.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/common/BasicParser.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_1__('music-metadata:parser:ID3');\n/**\n * Abstract parser which tries take ID3v2 and ID3v1 headers.\n */\nclass AbstractID3Parser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_5__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.id3parser = new _ID3v2Parser_js__WEBPACK_IMPORTED_MODULE_3__.ID3v2Parser();\n    }\n    static async startsWithID3v2Header(tokenizer) {\n        return (await tokenizer.peekToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_2__.ID3v2Header)).fileIdentifier === 'ID3';\n    }\n    async parse() {\n        try {\n            await this.parseID3v2();\n        }\n        catch (err) {\n            if (err instanceof strtok3__WEBPACK_IMPORTED_MODULE_0__.EndOfStreamError) {\n                debug(\"End-of-stream\");\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    finalize() {\n        return;\n    }\n    async parseID3v2() {\n        await this.tryReadId3v2Headers();\n        debug('End of ID3v2 header, go to MPEG-parser: pos=%s', this.tokenizer.position);\n        await this.postId3v2Parse();\n        if (this.options.skipPostHeaders && this.metadata.hasAny()) {\n            this.finalize();\n        }\n        else {\n            const id3v1parser = new _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__.ID3v1Parser(this.metadata, this.tokenizer, this.options);\n            await id3v1parser.parse();\n            this.finalize();\n        }\n    }\n    async tryReadId3v2Headers() {\n        const id3Header = await this.tokenizer.peekToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_2__.ID3v2Header);\n        if (id3Header.fileIdentifier === 'ID3') {\n            debug('Found ID3v2 header, pos=%s', this.tokenizer.position);\n            await this.id3parser.parse(this.metadata, this.tokenizer, this.options);\n            return this.tryReadId3v2Headers();\n        }\n    }\n}\n//# sourceMappingURL=AbstractID3Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tdXNpYy1tZXRhZGF0YUAxMC43LjAvbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi9pZDN2Mi9BYnN0cmFjdElEM1BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJDO0FBQ2I7QUFDZ0I7QUFDQztBQUNPO0FBQ0M7QUFDdkQsY0FBYyxrQ0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0MsK0RBQVc7QUFDbEQ7QUFDQTtBQUNBLDZCQUE2Qix3REFBVztBQUN4QztBQUNBO0FBQ0EsMENBQTBDLHVEQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixxREFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDhEQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsdURBQVc7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvbGlsYXMvQnVyZWF1L0Rldi9MTVAvbm9kZV9tb2R1bGVzLy5wbnBtL211c2ljLW1ldGFkYXRhQDEwLjcuMC9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL2lkM3YyL0Fic3RyYWN0SUQzUGFyc2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVuZE9mU3RyZWFtRXJyb3IgfSBmcm9tICdzdHJ0b2szJztcbmltcG9ydCBpbml0RGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHsgSUQzdjJIZWFkZXIgfSBmcm9tICcuL0lEM3YyVG9rZW4uanMnO1xuaW1wb3J0IHsgSUQzdjJQYXJzZXIgfSBmcm9tICcuL0lEM3YyUGFyc2VyLmpzJztcbmltcG9ydCB7IElEM3YxUGFyc2VyIH0gZnJvbSAnLi4vaWQzdjEvSUQzdjFQYXJzZXIuanMnO1xuaW1wb3J0IHsgQmFzaWNQYXJzZXIgfSBmcm9tICcuLi9jb21tb24vQmFzaWNQYXJzZXIuanMnO1xuY29uc3QgZGVidWcgPSBpbml0RGVidWcoJ211c2ljLW1ldGFkYXRhOnBhcnNlcjpJRDMnKTtcbi8qKlxuICogQWJzdHJhY3QgcGFyc2VyIHdoaWNoIHRyaWVzIHRha2UgSUQzdjIgYW5kIElEM3YxIGhlYWRlcnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBYnN0cmFjdElEM1BhcnNlciBleHRlbmRzIEJhc2ljUGFyc2VyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5pZDNwYXJzZXIgPSBuZXcgSUQzdjJQYXJzZXIoKTtcbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIHN0YXJ0c1dpdGhJRDN2MkhlYWRlcih0b2tlbml6ZXIpIHtcbiAgICAgICAgcmV0dXJuIChhd2FpdCB0b2tlbml6ZXIucGVla1Rva2VuKElEM3YySGVhZGVyKSkuZmlsZUlkZW50aWZpZXIgPT09ICdJRDMnO1xuICAgIH1cbiAgICBhc3luYyBwYXJzZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucGFyc2VJRDN2MigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBFbmRPZlN0cmVhbUVycm9yKSB7XG4gICAgICAgICAgICAgICAgZGVidWcoXCJFbmQtb2Ytc3RyZWFtXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZpbmFsaXplKCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGFzeW5jIHBhcnNlSUQzdjIoKSB7XG4gICAgICAgIGF3YWl0IHRoaXMudHJ5UmVhZElkM3YySGVhZGVycygpO1xuICAgICAgICBkZWJ1ZygnRW5kIG9mIElEM3YyIGhlYWRlciwgZ28gdG8gTVBFRy1wYXJzZXI6IHBvcz0lcycsIHRoaXMudG9rZW5pemVyLnBvc2l0aW9uKTtcbiAgICAgICAgYXdhaXQgdGhpcy5wb3N0SWQzdjJQYXJzZSgpO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLnNraXBQb3N0SGVhZGVycyAmJiB0aGlzLm1ldGFkYXRhLmhhc0FueSgpKSB7XG4gICAgICAgICAgICB0aGlzLmZpbmFsaXplKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBpZDN2MXBhcnNlciA9IG5ldyBJRDN2MVBhcnNlcih0aGlzLm1ldGFkYXRhLCB0aGlzLnRva2VuaXplciwgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgICAgIGF3YWl0IGlkM3YxcGFyc2VyLnBhcnNlKCk7XG4gICAgICAgICAgICB0aGlzLmZpbmFsaXplKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgdHJ5UmVhZElkM3YySGVhZGVycygpIHtcbiAgICAgICAgY29uc3QgaWQzSGVhZGVyID0gYXdhaXQgdGhpcy50b2tlbml6ZXIucGVla1Rva2VuKElEM3YySGVhZGVyKTtcbiAgICAgICAgaWYgKGlkM0hlYWRlci5maWxlSWRlbnRpZmllciA9PT0gJ0lEMycpIHtcbiAgICAgICAgICAgIGRlYnVnKCdGb3VuZCBJRDN2MiBoZWFkZXIsIHBvcz0lcycsIHRoaXMudG9rZW5pemVyLnBvc2l0aW9uKTtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuaWQzcGFyc2VyLnBhcnNlKHRoaXMubWV0YWRhdGEsIHRoaXMudG9rZW5pemVyLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJ5UmVhZElkM3YySGVhZGVycygpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJzdHJhY3RJRDNQYXJzZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/AbstractID3Parser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/FrameParser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/FrameParser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FrameParser: () => (/* binding */ FrameParser),\n/* harmony export */   Id3v2ContentError: () => (/* binding */ Id3v2ContentError),\n/* harmony export */   parseGenre: () => (/* binding */ parseGenre)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(app-pages-browser)/./node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/browser.js\");\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! token-types */ \"(app-pages-browser)/./node_modules/.pnpm/token-types@6.0.0/node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/Util.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ID3v2Token.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n/* harmony import */ var _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../id3v1/ID3v1Parser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v1/ID3v1Parser.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ParseError.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_0__('music-metadata:id3v2:frame-parser');\nconst defaultEnc = 'latin1'; // latin1 == iso-8859-1;\nfunction parseGenre(origVal) {\n    // match everything inside parentheses\n    const genres = [];\n    let code;\n    let word = '';\n    for (const c of origVal) {\n        if (typeof code === 'string') {\n            if (c === '(' && code === '') {\n                word += '(';\n                code = undefined;\n            }\n            else if (c === ')') {\n                if (word !== '') {\n                    genres.push(word);\n                    word = '';\n                }\n                const genre = parseGenreCode(code);\n                if (genre) {\n                    genres.push(genre);\n                }\n                code = undefined;\n            }\n            else\n                code += c;\n        }\n        else if (c === '(') {\n            code = '';\n        }\n        else {\n            word += c;\n        }\n    }\n    if (word) {\n        if (genres.length === 0 && word.match(/^\\d*$/)) {\n            word = parseGenreCode(word);\n        }\n        if (word) {\n            genres.push(word);\n        }\n    }\n    return genres;\n}\nfunction parseGenreCode(code) {\n    if (code === 'RX')\n        return 'Remix';\n    if (code === 'CR')\n        return 'Cover';\n    if (code.match(/^\\d*$/)) {\n        return _id3v1_ID3v1Parser_js__WEBPACK_IMPORTED_MODULE_4__.Genres[Number.parseInt(code)];\n    }\n}\nclass FrameParser {\n    /**\n     * Create id3v2 frame parser\n     * @param major - Major version, e.g. (4) for  id3v2.4\n     * @param warningCollector - Used to collect decode issue\n     */\n    constructor(major, warningCollector) {\n        this.major = major;\n        this.warningCollector = warningCollector;\n    }\n    readData(uint8Array, type, includeCovers) {\n        if (uint8Array.length === 0) {\n            this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${type}`);\n            return;\n        }\n        const { encoding, bom } = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.TextEncodingToken.get(uint8Array, 0);\n        const length = uint8Array.length;\n        let offset = 0;\n        let output = []; // ToDo\n        const nullTerminatorLength = FrameParser.getNullTerminatorLength(encoding);\n        let fzero;\n        debug(`Parsing tag type=${type}, encoding=${encoding}, bom=${bom}`);\n        switch (type !== 'TXXX' && type[0] === 'T' ? 'T*' : type) {\n            case 'T*': // 4.2.1. Text information frames - details\n            case 'GRP1': // iTunes-specific ID3v2 grouping field\n            case 'IPLS': // v2.3: Involved people list\n            case 'MVIN':\n            case 'MVNM':\n            case 'PCS':\n            case 'PCST': {\n                let text;\n                try {\n                    text = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(1), encoding).replace(/\\x00+$/, '');\n                }\n                catch (error) {\n                    if (error instanceof Error) {\n                        this.warningCollector.addWarning(`id3v2.${this.major} type=${type} header has invalid string value: ${error.message}`);\n                        break;\n                    }\n                    throw error;\n                }\n                switch (type) {\n                    case 'TMCL': // Musician credits list\n                    case 'TIPL': // Involved people list\n                    case 'IPLS': // Involved people list\n                        output = FrameParser.functionList(this.splitValue(type, text));\n                        break;\n                    case 'TRK':\n                    case 'TRCK':\n                    case 'TPOS':\n                        output = text;\n                        break;\n                    case 'TCOM':\n                    case 'TEXT':\n                    case 'TOLY':\n                    case 'TOPE':\n                    case 'TPE1':\n                    case 'TSRC':\n                        // id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n                        output = this.splitValue(type, text);\n                        break;\n                    case 'TCO':\n                    case 'TCON':\n                        output = this.splitValue(type, text).map(v => parseGenre(v)).reduce((acc, val) => acc.concat(val), []);\n                        break;\n                    case 'PCS':\n                    case 'PCST':\n                        // TODO: Why `default` not results `1` but `''`?\n                        output = this.major >= 4 ? this.splitValue(type, text) : [text];\n                        output = (Array.isArray(output) && output[0] === '') ? 1 : 0;\n                        break;\n                    default:\n                        output = this.major >= 4 ? this.splitValue(type, text) : [text];\n                }\n                break;\n            }\n            case 'TXXX': {\n                const idAndData = FrameParser.readIdentifierAndData(uint8Array, offset + 1, length, encoding);\n                const textTag = {\n                    description: idAndData.id,\n                    text: this.splitValue(type, _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(idAndData.data, encoding).replace(/\\x00+$/, ''))\n                };\n                output = textTag;\n                break;\n            }\n            case 'PIC':\n            case 'APIC':\n                if (includeCovers) {\n                    const pic = {};\n                    offset += 1;\n                    switch (this.major) {\n                        case 2:\n                            pic.format = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, offset + 3), 'latin1'); // 'latin1'; // latin1 == iso-8859-1;\n                            offset += 3;\n                            break;\n                        case 3:\n                        case 4:\n                            fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, defaultEnc);\n                            pic.format = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                            offset = fzero + 1;\n                            break;\n                        default:\n                            throw makeUnexpectedMajorVersionError(this.major);\n                    }\n                    pic.format = FrameParser.fixPictureMimeType(pic.format);\n                    pic.type = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.AttachedPictureType[uint8Array[offset]];\n                    offset += 1;\n                    fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n                    pic.description = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), encoding);\n                    offset = fzero + nullTerminatorLength;\n                    pic.data = uint8Array.slice(offset, length);\n                    output = pic;\n                }\n                break;\n            case 'CNT':\n            case 'PCNT':\n                output = token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.get(uint8Array, 0);\n                break;\n            case 'SYLT': {\n                const syltHeader = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.SyncTextHeader.get(uint8Array, 0);\n                offset += _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.SyncTextHeader.len;\n                const result = {\n                    descriptor: '',\n                    language: syltHeader.language,\n                    contentType: syltHeader.contentType,\n                    timeStampFormat: syltHeader.timeStampFormat,\n                    syncText: []\n                };\n                let readSyllables = false;\n                while (offset < length) {\n                    const nullStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), syltHeader.encoding);\n                    offset += nullStr.len;\n                    if (readSyllables) {\n                        const timestamp = token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.get(uint8Array, offset);\n                        offset += token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.len;\n                        result.syncText.push({\n                            text: nullStr.text,\n                            timestamp\n                        });\n                    }\n                    else {\n                        result.descriptor = nullStr.text;\n                        readSyllables = true;\n                    }\n                }\n                output = result;\n                break;\n            }\n            case 'ULT':\n            case 'USLT':\n            case 'COM':\n            case 'COMM': {\n                const textHeader = _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.TextHeader.get(uint8Array, offset);\n                offset += _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.TextHeader.len;\n                const descriptorStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), textHeader.encoding);\n                offset += descriptorStr.len;\n                const textStr = FrameParser.readNullTerminatedString(uint8Array.subarray(offset), textHeader.encoding);\n                const comment = {\n                    language: textHeader.language,\n                    descriptor: descriptorStr.text,\n                    text: textStr.text\n                };\n                output = comment;\n                break;\n            }\n            case 'UFID': {\n                const ufid = FrameParser.readIdentifierAndData(uint8Array, offset, length, defaultEnc);\n                output = { owner_identifier: ufid.id, identifier: ufid.data };\n                break;\n            }\n            case 'PRIV': { // private frame\n                const priv = FrameParser.readIdentifierAndData(uint8Array, offset, length, defaultEnc);\n                output = { owner_identifier: priv.id, data: priv.data };\n                break;\n            }\n            case 'POPM': { // Popularimeter\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, defaultEnc);\n                const email = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                const dataLen = length - offset;\n                output = {\n                    email,\n                    rating: token_types__WEBPACK_IMPORTED_MODULE_1__.UINT8.get(uint8Array, offset),\n                    counter: dataLen >= 5 ? token_types__WEBPACK_IMPORTED_MODULE_1__.UINT32_BE.get(uint8Array, offset + 1) : undefined\n                };\n                break;\n            }\n            case 'GEOB': { // General encapsulated object\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding);\n                const mimeType = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset + 1, fzero), defaultEnc);\n                offset = fzero + 1;\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n                const filename = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n                const description = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                offset = fzero + 1;\n                const geob = {\n                    type: mimeType,\n                    filename,\n                    description,\n                    data: uint8Array.slice(offset, length)\n                };\n                output = geob;\n                break;\n            }\n            // W-Frames:\n            case 'WCOM':\n            case 'WCOP':\n            case 'WOAF':\n            case 'WOAR':\n            case 'WOAS':\n            case 'WORS':\n            case 'WPAY':\n            case 'WPUB':\n                // Decode URL\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding);\n                output = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), defaultEnc);\n                break;\n            case 'WXXX': {\n                // Decode URL\n                fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding);\n                const description = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset + 1, fzero), encoding);\n                offset = fzero + (encoding === 'utf-16le' ? 2 : 1);\n                output = { description, url: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, length), defaultEnc) };\n                break;\n            }\n            case 'WFD':\n            case 'WFED':\n                output = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset + 1, _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset + 1, length, encoding)), encoding);\n                break;\n            case 'MCDI': {\n                // Music CD identifier\n                output = uint8Array.slice(0, length);\n                break;\n            }\n            default:\n                debug(`Warning: unsupported id3v2-tag-type: ${type}`);\n                break;\n        }\n        return output;\n    }\n    static readNullTerminatedString(uint8Array, encoding) {\n        let offset = encoding.bom ? 2 : 0;\n        const zeroIndex = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, uint8Array.length, encoding.encoding);\n        const txt = uint8Array.slice(offset, zeroIndex);\n        if (encoding.encoding === 'utf-16le') {\n            offset = zeroIndex + 2;\n        }\n        else {\n            offset = zeroIndex + 1;\n        }\n        return {\n            text: _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(txt, encoding.encoding),\n            len: offset\n        };\n    }\n    static fixPictureMimeType(pictureType) {\n        pictureType = pictureType.toLocaleLowerCase();\n        switch (pictureType) {\n            case 'jpg':\n                return 'image/jpeg';\n            case 'png':\n                return 'image/png';\n        }\n        return pictureType;\n    }\n    /**\n     * Converts TMCL (Musician credits list) or TIPL (Involved people list)\n     * @param entries\n     */\n    static functionList(entries) {\n        const res = {};\n        for (let i = 0; i + 1 < entries.length; i += 2) {\n            const names = entries[i + 1].split(',');\n            res[entries[i]] = res[entries[i]] ? res[entries[i]].concat(names) : names;\n        }\n        return res;\n    }\n    /**\n     * id3v2.4 defines that multiple T* values are separated by 0x00\n     * id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n     * @param tag - Tag name\n     * @param text - Concatenated tag value\n     * @returns Split tag value\n     */\n    splitValue(tag, text) {\n        let values;\n        if (this.major < 4) {\n            values = text.split(/\\x00/g);\n            if (values.length > 1) {\n                this.warningCollector.addWarning(`ID3v2.${this.major} ${tag} uses non standard null-separator.`);\n            }\n            else {\n                values = text.split(/\\//g);\n            }\n        }\n        else {\n            values = text.split(/\\x00/g);\n        }\n        return FrameParser.trimArray(values);\n    }\n    static trimArray(values) {\n        return values.map(value => value.replace(/\\x00+$/, '').trim());\n    }\n    static readIdentifierAndData(uint8Array, offset, length, encoding) {\n        const fzero = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.findZero(uint8Array, offset, length, encoding);\n        const id = _common_Util_js__WEBPACK_IMPORTED_MODULE_2__.decodeString(uint8Array.slice(offset, fzero), encoding);\n        offset = fzero + FrameParser.getNullTerminatorLength(encoding);\n        return { id, data: uint8Array.slice(offset, length) };\n    }\n    static getNullTerminatorLength(enc) {\n        return enc === 'utf-16le' ? 2 : 1;\n    }\n}\nclass Id3v2ContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_5__.makeUnexpectedFileContentError)('id3v2') {\n}\nfunction makeUnexpectedMajorVersionError(majorVer) {\n    throw new Id3v2ContentError(`Unexpected majorVer: ${majorVer}`);\n}\n//# sourceMappingURL=FrameParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/FrameParser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Parser.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Parser.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ID3v2Parser: () => (/* binding */ ID3v2Parser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(app-pages-browser)/./node_modules/.pnpm/token-types@6.0.0/node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_Util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/Util.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/common/Util.js\");\n/* harmony import */ var _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FrameParser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/FrameParser.js\");\n/* harmony import */ var _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ID3v2Token.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Token.js\");\n\n\n\n\nconst asciiDecoder = new TextDecoder('ascii');\nclass ID3v2Parser {\n    constructor() {\n        this.tokenizer = undefined;\n        this.id3Header = undefined;\n        this.metadata = undefined;\n        this.headerType = undefined;\n        this.options = undefined;\n    }\n    static removeUnsyncBytes(buffer) {\n        let readI = 0;\n        let writeI = 0;\n        while (readI < buffer.length - 1) {\n            if (readI !== writeI) {\n                buffer[writeI] = buffer[readI];\n            }\n            readI += (buffer[readI] === 0xFF && buffer[readI + 1] === 0) ? 2 : 1;\n            writeI++;\n        }\n        if (readI < buffer.length) {\n            buffer[writeI++] = buffer[readI];\n        }\n        return buffer.slice(0, writeI);\n    }\n    static getFrameHeaderLength(majorVer) {\n        switch (majorVer) {\n            case 2:\n                return 6;\n            case 3:\n            case 4:\n                return 10;\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n    }\n    static readFrameFlags(b) {\n        return {\n            status: {\n                tag_alter_preservation: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 0, 6),\n                file_alter_preservation: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 0, 5),\n                read_only: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 0, 4)\n            },\n            format: {\n                grouping_identity: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 7),\n                compression: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 3),\n                encryption: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 2),\n                unsynchronisation: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 1),\n                data_length_indicator: _common_Util_js__WEBPACK_IMPORTED_MODULE_1__.getBit(b, 1, 0)\n            }\n        };\n    }\n    static readFrameData(uint8Array, frameHeader, majorVer, includeCovers, warningCollector) {\n        const frameParser = new _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__.FrameParser(majorVer, warningCollector);\n        switch (majorVer) {\n            case 2:\n                return frameParser.readData(uint8Array, frameHeader.id, includeCovers);\n            case 3:\n            case 4:\n                if (frameHeader.flags?.format.unsynchronisation) {\n                    uint8Array = ID3v2Parser.removeUnsyncBytes(uint8Array);\n                }\n                if (frameHeader.flags?.format.data_length_indicator) {\n                    uint8Array = uint8Array.slice(4, uint8Array.length);\n                }\n                return frameParser.readData(uint8Array, frameHeader.id, includeCovers);\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n    }\n    /**\n     * Create a combined tag key, of tag & description\n     * @param tag e.g.: COM\n     * @param description e.g. iTunPGAP\n     * @returns string e.g. COM:iTunPGAP\n     */\n    static makeDescriptionTagName(tag, description) {\n        return tag + (description ? `:${description}` : '');\n    }\n    async parse(metadata, tokenizer, options) {\n        this.tokenizer = tokenizer;\n        this.metadata = metadata;\n        this.options = options;\n        const id3Header = await this.tokenizer.readToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.ID3v2Header);\n        if (id3Header.fileIdentifier !== 'ID3') {\n            throw new _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__.Id3v2ContentError('expected ID3-header file-identifier \\'ID3\\' was not found');\n        }\n        this.id3Header = id3Header;\n        this.headerType = (`ID3v2.${id3Header.version.major}`);\n        return id3Header.flags.isExtendedHeader ? this.parseExtendedHeader() : this.parseId3Data(id3Header.size);\n    }\n    async parseExtendedHeader() {\n        const extendedHeader = await this.tokenizer.readToken(_ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedHeader);\n        const dataRemaining = extendedHeader.size - _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.ExtendedHeader.len;\n        return dataRemaining > 0 ? this.parseExtendedHeaderData(dataRemaining, extendedHeader.size) : this.parseId3Data(this.id3Header.size - extendedHeader.size);\n    }\n    async parseExtendedHeaderData(dataRemaining, extendedHeaderSize) {\n        await this.tokenizer.ignore(dataRemaining);\n        return this.parseId3Data(this.id3Header.size - extendedHeaderSize);\n    }\n    async parseId3Data(dataLen) {\n        const uint8Array = await this.tokenizer.readToken(new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(dataLen));\n        for (const tag of this.parseMetadata(uint8Array)) {\n            switch (tag.id) {\n                case 'TXXX':\n                    if (tag.value) {\n                        await this.handleTag(tag, tag.value.text, () => tag.value.description);\n                    }\n                    break;\n                default:\n                    await (Array.isArray(tag.value) ? Promise.all(tag.value.map(value => this.addTag(tag.id, value))) : this.addTag(tag.id, tag.value));\n            }\n        }\n    }\n    async handleTag(tag, values, descriptor, resolveValue = value => value) {\n        await Promise.all(values.map(value => this.addTag(ID3v2Parser.makeDescriptionTagName(tag.id, descriptor(value)), resolveValue(value))));\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag(this.headerType, id, value);\n    }\n    parseMetadata(data) {\n        let offset = 0;\n        const tags = [];\n        while (true) {\n            if (offset === data.length)\n                break;\n            const frameHeaderLength = ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);\n            if (offset + frameHeaderLength > data.length) {\n                this.metadata.addWarning('Illegal ID3v2 tag length');\n                break;\n            }\n            const frameHeaderBytes = data.slice(offset, offset + frameHeaderLength);\n            offset += frameHeaderLength;\n            const frameHeader = this.readFrameHeader(frameHeaderBytes, this.id3Header.version.major);\n            const frameDataBytes = data.slice(offset, offset + frameHeader.length);\n            offset += frameHeader.length;\n            const values = ID3v2Parser.readFrameData(frameDataBytes, frameHeader, this.id3Header.version.major, !this.options.skipCovers, this.metadata);\n            if (values) {\n                tags.push({ id: frameHeader.id, value: values });\n            }\n        }\n        return tags;\n    }\n    readFrameHeader(uint8Array, majorVer) {\n        let header;\n        switch (majorVer) {\n            case 2:\n                header = {\n                    id: asciiDecoder.decode(uint8Array.slice(0, 3)),\n                    length: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_BE.get(uint8Array, 3)\n                };\n                if (!header.id.match(/[A-Z0-9]{3}/g)) {\n                    this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${header.id}`);\n                }\n                break;\n            case 3:\n            case 4:\n                header = {\n                    id: asciiDecoder.decode(uint8Array.slice(0, 4)),\n                    length: (majorVer === 4 ? _ID3v2Token_js__WEBPACK_IMPORTED_MODULE_3__.UINT32SYNCSAFE : token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_BE).get(uint8Array, 4),\n                    flags: ID3v2Parser.readFrameFlags(uint8Array.slice(8, 10))\n                };\n                if (!header.id.match(/[A-Z0-9]{4}/g)) {\n                    this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${header.id}`);\n                }\n                break;\n            default:\n                throw makeUnexpectedMajorVersionError(majorVer);\n        }\n        return header;\n    }\n}\nfunction makeUnexpectedMajorVersionError(majorVer) {\n    throw new _FrameParser_js__WEBPACK_IMPORTED_MODULE_2__.Id3v2ContentError(`Unexpected majorVer: ${majorVer}`);\n}\n//# sourceMappingURL=ID3v2Parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/id3v2/ID3v2Parser.js\n"));

/***/ })

}]);