"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_pnpm_music-metadata_10_7_0_node_modules_music-metadata_lib_wa-863744"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/wavpack/WavPackParser.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/wavpack/WavPackParser.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WavPackContentError: () => (/* binding */ WavPackContentError),\n/* harmony export */   WavPackParser: () => (/* binding */ WavPackParser)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(app-pages-browser)/./node_modules/.pnpm/token-types@6.0.0/node_modules/token-types/lib/index.js\");\n/* harmony import */ var _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../apev2/APEv2Parser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/apev2/APEv2Parser.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/FourCC.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/common/FourCC.js\");\n/* harmony import */ var _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/BasicParser.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/common/BasicParser.js\");\n/* harmony import */ var _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WavPackToken.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/wavpack/WavPackToken.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! debug */ \"(app-pages-browser)/./node_modules/.pnpm/debug@4.4.0/node_modules/debug/src/browser.js\");\n/* harmony import */ var uint8array_extras__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8array-extras */ \"(app-pages-browser)/./node_modules/.pnpm/uint8array-extras@1.4.0/node_modules/uint8array-extras/index.js\");\n/* harmony import */ var _ParseError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ParseError.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/ParseError.js\");\n\n\n\n\n\n\n\n\nconst debug = debug__WEBPACK_IMPORTED_MODULE_5__('music-metadata:parser:WavPack');\nclass WavPackContentError extends (0,_ParseError_js__WEBPACK_IMPORTED_MODULE_6__.makeUnexpectedFileContentError)('WavPack') {\n}\n/**\n * WavPack Parser\n */\nclass WavPackParser extends _common_BasicParser_js__WEBPACK_IMPORTED_MODULE_3__.BasicParser {\n    constructor() {\n        super(...arguments);\n        this.audioDataSize = 0;\n    }\n    async parse() {\n        this.audioDataSize = 0;\n        // First parse all WavPack blocks\n        await this.parseWavPackBlocks();\n        // try to parse APEv2 header\n        return _apev2_APEv2Parser_js__WEBPACK_IMPORTED_MODULE_1__.APEv2Parser.tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n    }\n    async parseWavPackBlocks() {\n        do {\n            const blockId = await this.tokenizer.peekToken(_common_FourCC_js__WEBPACK_IMPORTED_MODULE_2__.FourCcToken);\n            if (blockId !== 'wvpk')\n                break;\n            const header = await this.tokenizer.readToken(_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken);\n            if (header.BlockID !== 'wvpk')\n                throw new WavPackContentError('Invalid WavPack Block-ID');\n            debug(`WavPack header blockIndex=${header.blockIndex}, len=${_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken.len}`);\n            if (header.blockIndex === 0 && !this.metadata.format.container) {\n                this.metadata.setFormat('container', 'WavPack');\n                this.metadata.setFormat('lossless', !header.flags.isHybrid);\n                // tagTypes: this.type,\n                this.metadata.setFormat('bitsPerSample', header.flags.bitsPerSample);\n                if (!header.flags.isDSD) {\n                    // In case isDSD, these values will ne set in ID_DSD_BLOCK\n                    this.metadata.setFormat('sampleRate', header.flags.samplingRate);\n                    this.metadata.setFormat('duration', header.totalSamples / header.flags.samplingRate);\n                }\n                this.metadata.setFormat('numberOfChannels', header.flags.isMono ? 1 : 2);\n                this.metadata.setFormat('numberOfSamples', header.totalSamples);\n                this.metadata.setFormat('codec', header.flags.isDSD ? 'DSD' : 'PCM');\n            }\n            const ignoreBytes = header.blockSize - (_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken.len - 8);\n            await (header.blockIndex === 0 ? this.parseMetadataSubBlock(header, ignoreBytes) : this.tokenizer.ignore(ignoreBytes));\n            if (header.blockSamples > 0) {\n                this.audioDataSize += header.blockSize; // Count audio data for bit-rate calculation\n            }\n        } while (!this.tokenizer.fileInfo.size || this.tokenizer.fileInfo.size - this.tokenizer.position >= _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.BlockHeaderToken.len);\n        if (this.metadata.format.duration) {\n            this.metadata.setFormat('bitrate', this.audioDataSize * 8 / this.metadata.format.duration);\n        }\n    }\n    /**\n     * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf, 3.0 Metadata Sub-blocks\n     * @param header Header\n     * @param remainingLength Remaining length\n     */\n    async parseMetadataSubBlock(header, remainingLength) {\n        let remaining = remainingLength;\n        while (remaining > _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.MetadataIdToken.len) {\n            const id = await this.tokenizer.readToken(_WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.MetadataIdToken);\n            const dataSizeInWords = await this.tokenizer.readNumber(id.largeBlock ? token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_LE : token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8);\n            const data = new Uint8Array(dataSizeInWords * 2 - (id.isOddSize ? 1 : 0));\n            await this.tokenizer.readBuffer(data);\n            debug(`Metadata Sub-Blocks functionId=0x${id.functionId.toString(16)}, id.largeBlock=${id.largeBlock},data-size=${data.length}`);\n            switch (id.functionId) {\n                case 0x0: // ID_DUMMY: could be used to pad WavPack blocks\n                    break;\n                case 0xe: { // ID_DSD_BLOCK\n                    debug('ID_DSD_BLOCK');\n                    // https://github.com/dbry/WavPack/issues/71#issuecomment-483094813\n                    const mp = 1 << token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.get(data, 0);\n                    const samplingRate = header.flags.samplingRate * mp * 8; // ToDo: second factor should be read from DSD-metadata block https://github.com/dbry/WavPack/issues/71#issuecomment-483094813\n                    if (!header.flags.isDSD)\n                        throw new WavPackContentError('Only expect DSD block if DSD-flag is set');\n                    this.metadata.setFormat('sampleRate', samplingRate);\n                    this.metadata.setFormat('duration', header.totalSamples / samplingRate);\n                    break;\n                }\n                case 0x24: // ID_ALT_TRAILER: maybe used to embed original ID3 tag header\n                    debug('ID_ALT_TRAILER: trailer for non-wav files');\n                    break;\n                case 0x26: // ID_MD5_CHECKSUM\n                    this.metadata.setFormat('audioMD5', data);\n                    break;\n                case 0x2f: // ID_BLOCK_CHECKSUM\n                    debug(`ID_BLOCK_CHECKSUM: checksum=${(0,uint8array_extras__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToHex)(data)}`);\n                    break;\n                default:\n                    debug(`Ignore unsupported meta-sub-block-id functionId=0x${id.functionId.toString(16)}`);\n                    break;\n            }\n            remaining -= _WavPackToken_js__WEBPACK_IMPORTED_MODULE_4__.MetadataIdToken.len + (id.largeBlock ? token_types__WEBPACK_IMPORTED_MODULE_0__.UINT24_LE.len : token_types__WEBPACK_IMPORTED_MODULE_0__.UINT8.len) + dataSizeInWords * 2;\n            debug(`remainingLength=${remaining}`);\n            if (id.isOddSize)\n                this.tokenizer.ignore(1);\n        }\n        if (remaining !== 0)\n            throw new WavPackContentError('metadata-sub-block should fit it remaining length');\n    }\n}\n//# sourceMappingURL=WavPackParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/wavpack/WavPackParser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/wavpack/WavPackToken.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/wavpack/WavPackToken.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlockHeaderToken: () => (/* binding */ BlockHeaderToken),\n/* harmony export */   MetadataIdToken: () => (/* binding */ MetadataIdToken)\n/* harmony export */ });\n/* harmony import */ var token_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! token-types */ \"(app-pages-browser)/./node_modules/.pnpm/token-types@6.0.0/node_modules/token-types/lib/index.js\");\n/* harmony import */ var _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/FourCC.js */ \"(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/common/FourCC.js\");\n\n\nconst SampleRates = [6000, 8000, 9600, 11025, 12000, 16000, 22050, 24000, 32000, 44100,\n    48000, 64000, 88200, 96000, 192000, -1];\n/**\n * WavPack Block Header\n *\n * 32-byte little-endian header at the front of every WavPack block\n *\n * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf (page 2/6: 2.0 \"Block Header\")\n */\nconst BlockHeaderToken = {\n    len: 32,\n    get: (buf, off) => {\n        const flags = token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 24);\n        const res = {\n            // should equal 'wvpk'\n            BlockID: _common_FourCC_js__WEBPACK_IMPORTED_MODULE_1__.FourCcToken.get(buf, off),\n            //  0x402 to 0x410 are valid for decode\n            blockSize: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 4),\n            //  0x402 (1026) to 0x410 are valid for decode\n            version: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT16_LE.get(buf, off + 8),\n            //  40-bit total samples for entire file (if block_index == 0 and a value of -1 indicates an unknown length)\n            totalSamples: /* replace with bigint? (Token.UINT8.get(buf, off + 11) << 32) + */ token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 12),\n            // 40-bit block_index\n            blockIndex: /* replace with bigint? (Token.UINT8.get(buf, off + 10) << 32) + */ token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 16),\n            // 40-bit total samples for entire file (if block_index == 0 and a value of -1 indicates an unknown length)\n            blockSamples: token_types__WEBPACK_IMPORTED_MODULE_0__.UINT32_LE.get(buf, off + 20),\n            // various flags for id and decoding\n            flags: {\n                bitsPerSample: (1 + getBitAllignedNumber(flags, 0, 2)) * 8,\n                isMono: isBitSet(flags, 2),\n                isHybrid: isBitSet(flags, 3),\n                isJointStereo: isBitSet(flags, 4),\n                crossChannel: isBitSet(flags, 5),\n                hybridNoiseShaping: isBitSet(flags, 6),\n                floatingPoint: isBitSet(flags, 7),\n                samplingRate: SampleRates[getBitAllignedNumber(flags, 23, 4)],\n                isDSD: isBitSet(flags, 31)\n            },\n            // crc for actual decoded data\n            crc: new token_types__WEBPACK_IMPORTED_MODULE_0__.Uint8ArrayType(4).get(buf, off + 28)\n        };\n        if (res.flags.isDSD) {\n            res.totalSamples *= 8;\n        }\n        return res;\n    }\n};\n/**\n * 3.0 Metadata Sub-Blocks\n * Ref: http://www.wavpack.com/WavPack5FileFormat.pdf (page 4/6: 3.0 \"Metadata Sub-Block\")\n */\nconst MetadataIdToken = {\n    len: 1,\n    get: (buf, off) => {\n        return {\n            functionId: getBitAllignedNumber(buf[off], 0, 6), // functionId overlaps with isOptional flag\n            isOptional: isBitSet(buf[off], 5),\n            isOddSize: isBitSet(buf[off], 6),\n            largeBlock: isBitSet(buf[off], 7)\n        };\n    }\n};\nfunction isBitSet(flags, bitOffset) {\n    return getBitAllignedNumber(flags, bitOffset, 1) === 1;\n}\nfunction getBitAllignedNumber(flags, bitOffset, len) {\n    return (flags >>> bitOffset) & (0xffffffff >>> (32 - len));\n}\n//# sourceMappingURL=WavPackToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9tdXNpYy1tZXRhZGF0YUAxMC43LjAvbm9kZV9tb2R1bGVzL211c2ljLW1ldGFkYXRhL2xpYi93YXZwYWNrL1dhdlBhY2tUb2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFDO0FBQ2E7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFlO0FBQ3JDO0FBQ0E7QUFDQSxxQkFBcUIsMERBQVc7QUFDaEM7QUFDQSx1QkFBdUIsa0RBQWU7QUFDdEM7QUFDQSxxQkFBcUIsa0RBQWU7QUFDcEM7QUFDQSw4RkFBOEYsa0RBQWU7QUFDN0c7QUFDQSw0RkFBNEYsa0RBQWU7QUFDM0c7QUFDQSwwQkFBMEIsa0RBQWU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHFCQUFxQix1REFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvbGlsYXMvQnVyZWF1L0Rldi9MTVAvbm9kZV9tb2R1bGVzLy5wbnBtL211c2ljLW1ldGFkYXRhQDEwLjcuMC9ub2RlX21vZHVsZXMvbXVzaWMtbWV0YWRhdGEvbGliL3dhdnBhY2svV2F2UGFja1Rva2VuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRva2VuIGZyb20gJ3Rva2VuLXR5cGVzJztcbmltcG9ydCB7IEZvdXJDY1Rva2VuIH0gZnJvbSAnLi4vY29tbW9uL0ZvdXJDQy5qcyc7XG5jb25zdCBTYW1wbGVSYXRlcyA9IFs2MDAwLCA4MDAwLCA5NjAwLCAxMTAyNSwgMTIwMDAsIDE2MDAwLCAyMjA1MCwgMjQwMDAsIDMyMDAwLCA0NDEwMCxcbiAgICA0ODAwMCwgNjQwMDAsIDg4MjAwLCA5NjAwMCwgMTkyMDAwLCAtMV07XG4vKipcbiAqIFdhdlBhY2sgQmxvY2sgSGVhZGVyXG4gKlxuICogMzItYnl0ZSBsaXR0bGUtZW5kaWFuIGhlYWRlciBhdCB0aGUgZnJvbnQgb2YgZXZlcnkgV2F2UGFjayBibG9ja1xuICpcbiAqIFJlZjogaHR0cDovL3d3dy53YXZwYWNrLmNvbS9XYXZQYWNrNUZpbGVGb3JtYXQucGRmIChwYWdlIDIvNjogMi4wIFwiQmxvY2sgSGVhZGVyXCIpXG4gKi9cbmV4cG9ydCBjb25zdCBCbG9ja0hlYWRlclRva2VuID0ge1xuICAgIGxlbjogMzIsXG4gICAgZ2V0OiAoYnVmLCBvZmYpID0+IHtcbiAgICAgICAgY29uc3QgZmxhZ3MgPSBUb2tlbi5VSU5UMzJfTEUuZ2V0KGJ1Ziwgb2ZmICsgMjQpO1xuICAgICAgICBjb25zdCByZXMgPSB7XG4gICAgICAgICAgICAvLyBzaG91bGQgZXF1YWwgJ3d2cGsnXG4gICAgICAgICAgICBCbG9ja0lEOiBGb3VyQ2NUb2tlbi5nZXQoYnVmLCBvZmYpLFxuICAgICAgICAgICAgLy8gIDB4NDAyIHRvIDB4NDEwIGFyZSB2YWxpZCBmb3IgZGVjb2RlXG4gICAgICAgICAgICBibG9ja1NpemU6IFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyA0KSxcbiAgICAgICAgICAgIC8vICAweDQwMiAoMTAyNikgdG8gMHg0MTAgYXJlIHZhbGlkIGZvciBkZWNvZGVcbiAgICAgICAgICAgIHZlcnNpb246IFRva2VuLlVJTlQxNl9MRS5nZXQoYnVmLCBvZmYgKyA4KSxcbiAgICAgICAgICAgIC8vICA0MC1iaXQgdG90YWwgc2FtcGxlcyBmb3IgZW50aXJlIGZpbGUgKGlmIGJsb2NrX2luZGV4ID09IDAgYW5kIGEgdmFsdWUgb2YgLTEgaW5kaWNhdGVzIGFuIHVua25vd24gbGVuZ3RoKVxuICAgICAgICAgICAgdG90YWxTYW1wbGVzOiAvKiByZXBsYWNlIHdpdGggYmlnaW50PyAoVG9rZW4uVUlOVDguZ2V0KGJ1Ziwgb2ZmICsgMTEpIDw8IDMyKSArICovIFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAxMiksXG4gICAgICAgICAgICAvLyA0MC1iaXQgYmxvY2tfaW5kZXhcbiAgICAgICAgICAgIGJsb2NrSW5kZXg6IC8qIHJlcGxhY2Ugd2l0aCBiaWdpbnQ/IChUb2tlbi5VSU5UOC5nZXQoYnVmLCBvZmYgKyAxMCkgPDwgMzIpICsgKi8gVG9rZW4uVUlOVDMyX0xFLmdldChidWYsIG9mZiArIDE2KSxcbiAgICAgICAgICAgIC8vIDQwLWJpdCB0b3RhbCBzYW1wbGVzIGZvciBlbnRpcmUgZmlsZSAoaWYgYmxvY2tfaW5kZXggPT0gMCBhbmQgYSB2YWx1ZSBvZiAtMSBpbmRpY2F0ZXMgYW4gdW5rbm93biBsZW5ndGgpXG4gICAgICAgICAgICBibG9ja1NhbXBsZXM6IFRva2VuLlVJTlQzMl9MRS5nZXQoYnVmLCBvZmYgKyAyMCksXG4gICAgICAgICAgICAvLyB2YXJpb3VzIGZsYWdzIGZvciBpZCBhbmQgZGVjb2RpbmdcbiAgICAgICAgICAgIGZsYWdzOiB7XG4gICAgICAgICAgICAgICAgYml0c1BlclNhbXBsZTogKDEgKyBnZXRCaXRBbGxpZ25lZE51bWJlcihmbGFncywgMCwgMikpICogOCxcbiAgICAgICAgICAgICAgICBpc01vbm86IGlzQml0U2V0KGZsYWdzLCAyKSxcbiAgICAgICAgICAgICAgICBpc0h5YnJpZDogaXNCaXRTZXQoZmxhZ3MsIDMpLFxuICAgICAgICAgICAgICAgIGlzSm9pbnRTdGVyZW86IGlzQml0U2V0KGZsYWdzLCA0KSxcbiAgICAgICAgICAgICAgICBjcm9zc0NoYW5uZWw6IGlzQml0U2V0KGZsYWdzLCA1KSxcbiAgICAgICAgICAgICAgICBoeWJyaWROb2lzZVNoYXBpbmc6IGlzQml0U2V0KGZsYWdzLCA2KSxcbiAgICAgICAgICAgICAgICBmbG9hdGluZ1BvaW50OiBpc0JpdFNldChmbGFncywgNyksXG4gICAgICAgICAgICAgICAgc2FtcGxpbmdSYXRlOiBTYW1wbGVSYXRlc1tnZXRCaXRBbGxpZ25lZE51bWJlcihmbGFncywgMjMsIDQpXSxcbiAgICAgICAgICAgICAgICBpc0RTRDogaXNCaXRTZXQoZmxhZ3MsIDMxKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vIGNyYyBmb3IgYWN0dWFsIGRlY29kZWQgZGF0YVxuICAgICAgICAgICAgY3JjOiBuZXcgVG9rZW4uVWludDhBcnJheVR5cGUoNCkuZ2V0KGJ1Ziwgb2ZmICsgMjgpXG4gICAgICAgIH07XG4gICAgICAgIGlmIChyZXMuZmxhZ3MuaXNEU0QpIHtcbiAgICAgICAgICAgIHJlcy50b3RhbFNhbXBsZXMgKj0gODtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbn07XG4vKipcbiAqIDMuMCBNZXRhZGF0YSBTdWItQmxvY2tzXG4gKiBSZWY6IGh0dHA6Ly93d3cud2F2cGFjay5jb20vV2F2UGFjazVGaWxlRm9ybWF0LnBkZiAocGFnZSA0LzY6IDMuMCBcIk1ldGFkYXRhIFN1Yi1CbG9ja1wiKVxuICovXG5leHBvcnQgY29uc3QgTWV0YWRhdGFJZFRva2VuID0ge1xuICAgIGxlbjogMSxcbiAgICBnZXQ6IChidWYsIG9mZikgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZnVuY3Rpb25JZDogZ2V0Qml0QWxsaWduZWROdW1iZXIoYnVmW29mZl0sIDAsIDYpLCAvLyBmdW5jdGlvbklkIG92ZXJsYXBzIHdpdGggaXNPcHRpb25hbCBmbGFnXG4gICAgICAgICAgICBpc09wdGlvbmFsOiBpc0JpdFNldChidWZbb2ZmXSwgNSksXG4gICAgICAgICAgICBpc09kZFNpemU6IGlzQml0U2V0KGJ1ZltvZmZdLCA2KSxcbiAgICAgICAgICAgIGxhcmdlQmxvY2s6IGlzQml0U2V0KGJ1ZltvZmZdLCA3KVxuICAgICAgICB9O1xuICAgIH1cbn07XG5mdW5jdGlvbiBpc0JpdFNldChmbGFncywgYml0T2Zmc2V0KSB7XG4gICAgcmV0dXJuIGdldEJpdEFsbGlnbmVkTnVtYmVyKGZsYWdzLCBiaXRPZmZzZXQsIDEpID09PSAxO1xufVxuZnVuY3Rpb24gZ2V0Qml0QWxsaWduZWROdW1iZXIoZmxhZ3MsIGJpdE9mZnNldCwgbGVuKSB7XG4gICAgcmV0dXJuIChmbGFncyA+Pj4gYml0T2Zmc2V0KSAmICgweGZmZmZmZmZmID4+PiAoMzIgLSBsZW4pKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdhdlBhY2tUb2tlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/music-metadata@10.7.0/node_modules/music-metadata/lib/wavpack/WavPackToken.js\n"));

/***/ })

}]);